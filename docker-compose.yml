services:
  db-master:
    image: bitnami/postgresql:15
    container_name: db-master
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=booking
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=replicator
      - POSTGRESQL_REPLICATION_PASSWORD=replicator_pass
      - POSTGRESQL_USERNAME=booking
      - POSTGRESQL_PASSWORD=booking
      - POSTGRESQL_DATABASE=booking
    volumes:
      - postgres_master_data:/bitnami/postgresql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-U", "booking"]
      interval: 10s
      retries: 5

  db-replica:
    image: bitnami/postgresql:15
    container_name: db-replica
    depends_on:
      - db-master
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_MASTER_HOST=db-master
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
      - POSTGRESQL_REPLICATION_USER=replicator
      - POSTGRESQL_REPLICATION_PASSWORD=replicator_pass
      - POSTGRESQL_POSTGRES_PASSWORD=booking
      - POSTGRESQL_USERNAME=booking
      - POSTGRESQL_PASSWORD=booking
      - POSTGRESQL_DATABASE=booking
    volumes:
      - postgres_replica_data:/bitnami/postgresql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-U", "booking"]
      interval: 10s
      retries: 5

  web:
    build: .
    container_name: web
    restart: unless-stopped
    depends_on:
      db-master:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - .:/app:cached
    environment:
      DATABASE_URL: postgresql://booking:booking@db-master:5432/booking
      REPLICA_DATABASE_URL: postgresql://booking:booking@db-replica:5432/booking
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
    entrypoint: ["bash", "/app/entrypoint.sh"]

volumes:
  postgres_master_data:
  postgres_replica_data: